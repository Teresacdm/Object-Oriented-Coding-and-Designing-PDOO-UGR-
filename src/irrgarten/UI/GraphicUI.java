/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package irrgarten.UI;

import irrgarten.Directions;
import irrgarten.GameState;

/**
 *
 * @author usuario
 */
public class GraphicUI extends javax.swing.JFrame {

    private Cursors c;
    /**
     * Creates new form GraphicUI
     */
    public GraphicUI() {
        initComponents();
        setVisible(true);
        c = new Cursors(this, true);
    }
    /*
    private void initComponents(){
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("Irrgarten: ");

        JPanel gamePanel = new JPanel(); // panel de juego, donde se mostrará el juego
    }
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labyrinthArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        playersArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        monstersArea = new javax.swing.JTextArea();
        currentPlayer = new javax.swing.JLabel();
        winner = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labyrinthArea.setColumns(20);
        labyrinthArea.setRows(5);
        labyrinthArea.setText("Laberinto:");
        jScrollPane1.setViewportView(labyrinthArea);

        playersArea.setColumns(20);
        playersArea.setRows(5);
        playersArea.setText("Jugadores:");
        jScrollPane2.setViewportView(playersArea);

        monstersArea.setColumns(20);
        monstersArea.setRows(5);
        monstersArea.setText("Monstruos:");
        jScrollPane3.setViewportView(monstersArea);

        currentPlayer.setText("Jugador actual:");

        winner.setText("¿Hay ganador?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(currentPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(winner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(currentPlayer)
                .addGap(18, 18, 18)
                .addComponent(winner)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //@Override
    public Directions nextMove(){
        return c.getDirection();
    }
    
    public void showGame(GameState gs){
        this.labyrinthArea.setText(gs.GetLabyrinth());
        this.playersArea.setText(gs.GetPlayers());
        this.monstersArea.setText(gs.GetMonsters());
        this.currentPlayer.setText(Integer.toString(gs.GetCurrentPlayer()));
        if(gs.GetWinner()){
            this.winner.setText("Sí, hay ganador");
        }
        else{
            this.winner.setText("No, aún no hay ganador");
        }     
        repaint();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentPlayer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea labyrinthArea;
    private javax.swing.JTextArea monstersArea;
    private javax.swing.JTextArea playersArea;
    private javax.swing.JLabel winner;
    // End of variables declaration//GEN-END:variables
}
